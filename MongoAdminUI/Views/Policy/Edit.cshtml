@model MongoAdminUI.Models.PolicyModels.PolicyModel

@{
    ViewData["Title"] = "Edit Policy";
    var roleSelectList = ViewBag.Roles as SelectList; // Ensure this is set in your controller
    var currentRoles = Model.Roles ?? new List<string>(); // Current roles of the policy
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Edit" method="post">
    @Html.HiddenFor(model => model.PolicyId)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, new { @class = "control-label" })
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label asp-for="RolesToAdd" class="control-label">Add Roles</label>
        @Html.ListBoxFor(model => model.RolesToAdd, roleSelectList, new { @class = "form-control", @multiple = "multiple" })
        @Html.ValidationMessageFor(model => model.RolesToAdd, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label asp-for="RolesToRemove" class="control-label">Remove Roles</label>
        @Html.ListBoxFor(model => model.RolesToRemove, new SelectList(currentRoles), new { @class = "form-control", @multiple = "multiple" })
        @Html.ValidationMessageFor(model => model.RolesToRemove, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <input type="submit" value="Update" class="btn btn-primary" />
    </div>
</form>


